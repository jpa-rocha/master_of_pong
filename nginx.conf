events {}

http {
    server {
        listen 80;

        # Define the domain or IP address where the frontend is hosted
        server_name http://localhost:3000;

        # CORS configuration
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' "$http_origin" always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            proxy_pass http://backend:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

In this configuration:

    Replace frontend.example.com with the domain or IP address where your frontend is hosted.
    Replace your_backend_port with the port on which your backend service is running within the Docker network.
    The location / block handles regular requests as well as OPTIONS requests.
    CORS headers are added to both regular responses and OPTIONS responses.
    The backend service is proxied through the Nginx server.

Please note that this is a basic example to get you started. Depending on your specific project setup and security requirements, you might need to further enhance and secure this configuration. Additionally, make sure to adjust firewall settings and other security measures to protect your server.

Remember that security is a complex topic, and it's always a good idea to consult relevant documentation and, if needed, seek the advice of a cybersecurity professional to ensure your setup is robust and secure.
