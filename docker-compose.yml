version: "3.9"

services:

  db:
    image: postgres:15.3
    container_name: ${DB_HOST}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - master_of_pong
    volumes:
      - db_volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: on-failure

  db_viewer:
    image: adminer
    container_name: adminer
    restart: on-failure
    ports:
      - 8081:8080
    networks:
      - master_of_pong

  backend:
    image: backend
    build: ./backend/
    container_name: backend
    depends_on:
      - db
    restart: on-failure
    networks:
      - master_of_pong
    # ports:
    #   - "5000:5000"
      # - "8002:8002"
      # - "4000:4000"
      # - "5050:5050"
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./backend/app/
        target: /backend
    stop_grace_period: 1s

  frontend:
    image: frontend
    build: ./frontend/
    container_name: frontend
    depends_on:
      - db
      - backend
    restart: on-failure
    networks:
      - master_of_pong
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ./frontend/app/
        target: /frontend
    env_file:
      - .env
    stop_grace_period: 1s

  reverse_proxy:
    image: nginx:latest
    container_name: reverse_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - master_of_pong
    restart: always
volumes:
  db_volume:
    driver: local

networks:
  master_of_pong:
    name: master_of_pong
    driver: bridge

